runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
page_two <- tabPanel(
"Mission Statement",
sidebarLayout(
sidebarPanel(
h1("About Us:"),
p("We are Augene Pak, Dhruv Karia, Justin Zeng, and Max Bennett. We are
Informatics majors in the University of Washington and are each a member
of the Information School's class of 2024.")
),
mainPanel(
h1("Our Mission:"),
p("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint
occaecat cupidatat non proident, sunt in culpa qui officia deserunt
mollit anim id est laborum.")
),
position = "right"
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
library(tidymodels)
library(tidymodels)
library(tensorflow)
library(tidyverse)
library(rvest)
library(BatchGetSymbols)
library(plotly)
library(ggplot2)
library(quantmod)
content <- read_html("http://web.archive.org/web/20210131152856/http://gambiste.com/index.php/gambiste-daily-stock-rating/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
top <- head(df, 10)
symbols <- top[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-182, verbose=TRUE, simplify = FALSE)
View(result)
View(symbols)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
symbols <- df[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-182, verbose=TRUE, simplify = FALSE)
View(result)
library(tidyverse)
library(rvest)
library(quantmod)
library(dplyr)
library(ggplot2)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
top <- head(df, 10)
symbols <- top[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-182, verbose=TRUE, simplify = FALSE)
#plot(result$SNDL, main = "Visualizations")
for (x in symbols) {
candle <- candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
View(candle)
View(result$GME)
View(df)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
tickers = c("AAPL", "NFLX", "AMZN", "K", "O")
tickers = df$Symbol
View(tickers)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
View(tickers)
getSymbols(tickers,
from = "2020-02-01",
to = "2020-02-01")
library(models)
library(tidyq)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
tickers = df$Symbol
getSymbols(tickers,
from = "2020-02-01",
to = "2020-02-01")
View(result)
getSymbols(tickers,
from = "2020-02-01",
to = "2020-02-01")
getSymbols(tickers,
from = as.Date(Sys.time())-182,
src = 'yahoo',
auto.assign = FALSE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
library(models)
library(tidyquant)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
tickers = df$Symbol
getSymbols(tickers,
from = as.Date(Sys.time())-182,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
View(tickers)
View(AA)
View(AA)
View(AA)
class(AAPL)
chart_Series(AAPL)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
library(purrr)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
head(prices)
View(prices)
tickers = df$Symbol[1:10]
View(tickers)
dff <- getSymbols(tickers,
from = as.Date(Sys.time()),
to = as.Date(Sys.time()),
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
View(df)
View(df)
getSymbols(tickers,
from = as.Date(Sys.time()),
to = as.Date(Sys.time()),
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
getSymbols(tickers,
from = as.Date(Sys.time()),
to = as.Date(Sys.time()),
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
write.csv(df, "C:\\CSE\\stock-market-twitter\\data\\gambiste-backup.csv")
df <- read.csv("data/gambiste-backup.csv")
tickers = df$Symbol[1:10]
View(tickers)
df2 <- getSymbols(tickers,
from = as.Date(Sys.time()),
to = as.Date(Sys.time()),
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
getSymbols(tickers,
from = as.Date(Sys.time()),
to = as.Date(Sys.time()),
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
getSymbols(tickers,
from = as.Date(Sys.time()),
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
getSymbols(tickers,
from = as.Date(Sys.time()) - 1,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
View(prices)
getSymbols(tickers,
from = as.Date(Sys.time()) - 180,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
head(prices)
getSymbols(tickers,
from = as.Date(Sys.time()) - 1,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
head(prices)
df2 <- getSymbols(tickers,
from = as.Date(Sys.time()) - 1,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
View(df2)
prices <- map(tickers,function(x) Ad(get(x)))
View(prices)
prices <- t(prices)
getSymbols(tickers,
from = as.Date(Sys.time()) - 1,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
prices <- t(prices)
getSymbols(tickers,
from = as.Date(Sys.time()) - 180,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
prices <- t(prices)
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
library(tidyverse)
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
View(df_adjuste)
View(df_adjusted)
View(df)
View(prices)
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
getSymbols(tickers,
from = mondate(as.Date(Sys.time())) - 3,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
tickers = df$Symbol[1:10]
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
getSymbols(tickers,
from = mondate(as.Date(Sys.time())) - 3,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
prices <- t(prices)
View(prices)
df <- read.csv("data/gambiste-backup.csv")
tickers = df$Symbol[1:10]
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
getSymbols(tickers,
from = mondate(as.Date(Sys.time())) - 3,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
prices <- t(prices)
library(mondate)
df <- read.csv("data/gambiste-backup.csv")
tickers = df$Symbol[1:10]
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
getSymbols(tickers,
from = mondate(as.Date(Sys.time())) - 3,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
prices <- t(prices)
library(models)
library(purrr)
library(tidyquant)
library(tidyverse)
library(mondate)
# content <- read_html("http://gambiste.com/")
# tables <- content %>% html_table(fill = TRUE)
# df <- do.call(rbind.data.frame, tables)
df <- read.csv("data/gambiste-backup.csv")
tickers = df$Symbol[1:10]
df_adjusted <- select(df, Rank, Symbol, Score, X3.Months.Perf)
getSymbols(tickers,
from = mondate(as.Date(Sys.time())) - 3,
src = 'yahoo',
auto.assign = TRUE,
verbose=TRUE,
simplify = FALSE)
prices <- map(tickers,function(x) Ad(get(x)))
prices <- reduce(prices,merge)
colnames(prices) <- tickers
prices <- t(prices)
shiny::runApp()
runApp()
runApp()
library(tidyverse)
library(rvest)
library(quantmod)
library(ggplot2)
library(BatchGeteqSymbols)
library(plotly)
# comment this if gambiste is clownin us
# content <- read_html("http://gambiste.com/")
df <- read.csv("./data/scrapeddf.csv", stringsAsFactors = FALSE)
# comment this if gambiste is clownin us
# tables <- content %>% html_table(fill = TRUE)
# comment this if gambiste is clownin us
# df <- do.call(rbind.data.frame, tables)
top <- head(df, 10)
symbols <- top[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-182, verbose=TRUE, simplify = FALSE)
#plot(result$SNDL, main = "Visualizations")
for (x in symbols) {
candle <- candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
runApp()
source("scripts/top_ten.R")
home_page <- tabPanel(
"Overview",
titlePanel("Stock Visualizations"),
sidebarLayout(
sidebarPanel(
helpText(
"Select a date range and a stock to examine.
Information collected from Yahoo Finance."
),
#textInput("symb", "Symbol", "AMC"),
dateRangeInput(
"dates",
"Date range",
start = "2013-01-01",
end = as.character(Sys.Date())
),
selectInput("symb", "Top Stocks:",
c(symbols)),
actionButton("get", "Get Stock"),
br(),
br(),
checkboxInput("log", "Plot y axis on log scale",
value = FALSE)
),
mainPanel(
plotOutput("plot"),
br(),
br(),
datatable(top, options = list(compact)) #%>% formatStyle(),
)
)
)
page_two <- tabPanel("Mission Statement",
sidebarLayout(sidebarPanel(
h1("About Us:"),
p(
"We are Augene Pak, Dhruv Karia, Justin Zeng, and
Max Bennett. We are Informatics majors in the
University of Washington and are each a member of the
Information School's class of 2024."
)
),
mainPanel(
h1("Our Mission:"),
p(
"Our mission is to enable retail traders with the tools
and knowledge  needed to invest like a pro."
)
),
position = "right"))
news_page <- tabPanel("Top 10 News",
sidebarLayout(
sidebarPanel(
h1("Choose a Company"),
selectInput("chooseQuery", "Options", c(symbols)),
h1("Choose a News Source"),
selectInput("chooseSource", "Options", terms_sources$sources)
),
mainPanel(h1("News"),
textOutput("news")),
))
# Define UI
ui <- fluidPage(
theme = shinytheme("yeti"),
navbarPage("Stocklytics",
home_page,
page_two,
news_page),
# Loading icon
add_busy_spinner(
spin = "fingerprint",
color = "#333333",
margins = c(40, 20),
height = "5%",
width = "5%",
position = "bottom-right",
timeout = 50
)
)
runApp()
runApp()
runApp()
install.packages("BatchGeteqSymbols")
runApp()
library(BatchGeteqSymbols)
library(BatchGeteqSymbols)
library(tidyverse)
library(rvest)
library(quantmod)
library(ggplot2)
library(BatchGeteqSymbols)
library(plotly)
# comment this if gambiste is clownin us
# content <- read_html("http://gambiste.com/")
df <- read.csv("./data/scrapeddf.csv", stringsAsFactors = FALSE)
# comment this if gambiste is clownin us
# tables <- content %>% html_table(fill = TRUE)
# comment this if gambiste is clownin us
# df <- do.call(rbind.data.frame, tables)
top <- head(df, 10)
symbols <- top[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-182, verbose=TRUE, simplify = FALSE)
#plot(result$SNDL, main = "Visualizations")
for (x in symbols) {
candle <- candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(price)
View(prices)
runApp()
runApp()
runApp()
runApp()
runApp()
