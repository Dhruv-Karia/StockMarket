)
library(dplyr)
source("analysis.R")
shiny::runApp()
runApp()
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
library(tidyverse)
library(rvest)
library(BatchGetSymbols)
library(quantmod)
library(dplyr)
library(tidyverse)
library(rvest)
library(BatchGetSymbols)
library(quantmod)
library(dplyr)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
View(tables)
top <- head(df, 25)
View(top)
symbols <- c(top["Symbol"])
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
stock <- c("TSLA", 'QQQ')
symbols <- top["Symbol"]
result <- sapply(stock, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = TRUE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
View(result)
stock <- c("TSLA", 'QQQ', "BFT", "MSFT", "AAPL")
result <- sapply(stock, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
symbols <- top["Symbol"]
symbols <- as.vector(top['Symbol'])
View(symbols)
symbols <- as.vector(top['Symbol'])
symbols <- c(top['Symbol'])
View(symbols)
symbols <- top[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
View(result)
print(result$SNDL)
df <- rbind(df, result)
df <- dplyr::bind_rows(df, result)
dplyr::bind_rows(df, result)
df <- smartbind(df, result)
install.packages(gtools)
install.packages("gtools")
library(gtools)
df <- smartbind(df, result)
df <- rbind.fill(df, result)
df <- rbind.fill(df, result)
install.packages("sos")
library(sos)
library(sos)
df <- rbind.fill(df, result)
library(sos)
df <- rbind.fill(df, result)
df <- rbind.fill(df, result)
symbols <- df[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
df <- rbind(df, result)
top <- head(df, 10)
symbols <- top[['Symbol']]
top <- head(df, 25)
symbols <- top[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
print(result)
rbindx <- function(..., dfs=list(...)) {
ns <- unique(unlist(sapply(dfs, names)))
do.call(rbind, lapply(dfs, function(x) {
for(n in ns[! ns %in% names(x)]) {x[[n]] <- NA}; x }))
}
rbindx(df, result)
df$Information <- result
df$Information <- result$GME
df$Information[1] = result$GME
df$Rank[1] = result$GME
df$Rank[1] = result$GME
df$Rank[1] = result$GME
View(df)
df$Rank[1] = result
df$Rank[1] = do.call(rbind.data.frame, result$AMC)
df$Rank[1] = do.call(rbind.data.frame, result$AMC)
df$Rank[1] = do.call(rbind.data.frame, result$AMC)
df$Rank[1] = do.call(rbind.data.frame, result$AMC)
df$Rank[1] = do.call(rbind.data.frame, result$AMC)
amc <- do.call(rbind.data.frame, result$AMC)
amc <- do.call(rbind.data.frame, result$AMC)
amc <- do.call(rbind.data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, results$AMC)
df$Rank[1] = do.call(data.frame, results$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = do.call(data.frame, result$AMC)
df$Rank[1] = result$AMC
df <- data_frame(
x = c(1L, 2L, 3L),
nested = list(data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('d', 'e', 'f'))))
unnest(df)
library(tidyverse)
df <- data_frame(
x = c(1L, 2L, 3L),
nested = list(data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('d', 'e', 'f'))))
View(df)
View(df[[2]][[1]])
unnest(df)
View(df)
View(df)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('d', 'e', 'f'))))
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
top <- head(df, 25)
symbols <- top[['Symbol']]
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('d', 'e', 'f'))))
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = result)
View(df2)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(result))
View(df2)
View(df2[[2]][[2]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2)
View(df2[[2]][[1]])
View(result)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = data_frame(result))
View(df2)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2)
View(df2[[2]][[1]])
df5 <- data_frame(
x = c(1L, 2L, 3L),
nested = list(data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('a', 'b', 'c')),
data_frame(x = c('d', 'e', 'f'))))
View(df5)
View(df5[[2]][[1]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2)
View(df2[[2]][[1]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2[[2]][[2]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = (data_frame(result))
View(df2)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = data_frame(result)
View(df2)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(as.data.frame.table(result)))
View(df2)
View(df2)
View(df2[[2]][[5]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2)
View(df2[[2]][[2]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(ftable(result)))
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame( x = result)))
View(df2)
View(df2[[2]][[3]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result$GME)))
View(df2)
View(df2[[2]][[1]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE))))
View(df2)
View(df2[[2]][[1]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2)
View(df2[[2]][[1]])
View(df5[[2]][[2]])
View(df5[[2]][[1]])
result <- do.call(rbind.data.frame, result)
library (plyr)
result <- ldply (result, data.frame)
View(result)
View(result)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2)
View(df2[[2]][[1]])
View(df2[[2]][[7]])
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-7, verbose=TRUE, simplify = FALSE)
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result)))
View(df2)
View(df2[[2]][[1]])
View(df2[[2]][[2]])
View(df2[[2]][[1]])
df2 <- data_frame(
Symbol = top[['Symbol']],
nested = list(data_frame(result$GME)))
View(df2[[2]][[1]])
View(df2[[2]][[4]])
print(result[1])
print(result[1:10])
library (plyr)
df2 <- ldply (result, data.frame)
View(df2)
print(result(1))
print(result[1])
library(ggplot2)
library(tidyverse)
library(rvest)
library(quantmod)
library(dplyr)
library(ggplot2)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
top <- head(df, 10)
symbols <- top[['Symbol']]
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-365, verbose=TRUE, simplify = FALSE)
ggplot(result, aes(x = index(result), y = result[,6])) + geom_line(color = "darkblue") +
ggtitle("Petrobras prices series") + xlab("Date") + ylab("Price") +
theme(plot.title = element_text(hjust = 0.5)) + scale_x_date(date_labels = "%b %y",
date_breaks = "6 months")
ggplot(result, aes(x = index(result), y = result[,6])) + geom_line(color = "darkblue") +
ggtitle("Petrobras prices series") + xlab("Date") + ylab("Price") +
theme(plot.title = element_text(hjust = 0.5)) + scale_x_date(date_labels = "%b %y",
date_breaks = "6 months")
stocks_series = tidy(result) %>%
ggplot(aes(x=index,y=value, color=series)) + geom_line()
stocks_series
stocks_series = tidy(result)
candleChart(PETRONET.BO,up.col="black",dn.col="red",theme = "white")
plot(result$GME, main = "Closing Prices of Petronet LNG")
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-30, verbose=TRUE, simplify = FALSE)
plot(result$GME, main = "Closing Prices of Petronet LNG")
plot(result[1], main = "Visualizations")
plot(result$AMC, main = "Visualizations")
plot(result$SNDL, main = "Visualizations")
candleChart(SNDL,up.col="black",dn.col="red",theme = "white")
candleChart(result$SNDL,up.col="black",dn.col="red",theme = "white")
plot(result$SNDL, main = "Visualizations")
candleChart(result$SNDL,up.col="black",dn.col="red",theme = "white")
candleChart(result$BNGO,up.col="black",dn.col="red",theme = "white")
candleChart(df$BNGO,up.col="black",dn.col="red",theme = "white")
candleChart(result$BNGO,up.col="black",dn.col="red",theme = "white")
candleChart(result$SNDL, up.col = "blue", dn.col = "red",
theme = "white")
candleChart(result$BNGO,up.col="black",dn.col="red",theme = "white")
View(result)
candleChart(result[1],up.col="black",dn.col="red",theme = "white")
candleChart(result[1],up.col="black",dn.col="red",theme = "white")
candleChart(result[1],up.col="black",dn.col="red",theme = "white")
candleChart(result[1],up.col="black",dn.col="red",theme = "white")
candleChart(result$GME,up.col="black",dn.col="red",theme = "white")
#plot(result$SNDL, main = "Visualizations")
candleChart(result$GME,up.col="black",dn.col="blue",theme = "white")
candleChart(result$GME,up.col="black",dn.col="red",theme = "white")
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-360, verbose=TRUE, simplify = FALSE)
candleChart(result$GME,up.col="black",dn.col="red",theme = "white")
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-90, verbose=TRUE, simplify = FALSE)
#plot(result$SNDL, main = "Visualizations")
candleChart(result$GME,up.col="black",dn.col="red",theme = "white")
candleChart(result$GME,up.col="green",dn.col="red",theme = "white")
candleChart(result$GME,up.col="darkgreen",dn.col="red",theme = "white")
result <- sapply(symbols, getSymbols, src = 'yahoo', auto.assign = FALSE,
from = as.Date(Sys.time())-182, verbose=TRUE, simplify = FALSE)
candleChart(result$GME,up.col="darkgreen",dn.col="red",theme = "white")
candleChart(result$AMC,up.col="darkgreen",dn.col="red",theme = "white")
candleChart(result[1],up.col="darkgreen",dn.col="red",theme = "white")
print(symbols[1])
for (x in symbols) {
candleChart(paste("result$", symbols[x]),up.col="darkgreen",dn.col="red",theme = "white")
}
candleChart(paste("result$", symbols[1]),up.col="darkgreen",dn.col="red",theme = "white")
print(paste("result$", symbols[1]))
print(paste0("result$", symbols[1]))
print(paste0("result$", symbols[0]))
View(df)
print(paste0("result$", symbols[0]))
print(paste0("result$", symbols[1]))
candleChart(paste0("result$", symbols[1]),up.col="darkgreen",dn.col="red",theme = "white")
candleChart(result$GME, up.col="darkgreen",dn.col="red",theme = "white")
paste0("result$", symbols[1])
try = paste0("result$", symbols[1])
print(try)
for (x in symbols) {
candleChart(try, up.col="darkgreen",dn.col="red",theme = "white")
}
candleChart(result[["AMC"]], up.col="darkgreen",dn.col="red",theme = "white")
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white")
}
for (x in symbols) {
y = candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white")
}
for (x in symbols) {
y = candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", title = "Basic Candlestick Chart")
}
y = candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", title = "Basic Candlestick Chart")
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", title = "Basic Candlestick Chart")
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", title = "Basic Candlestick Chart")
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name="new name")
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name= result[[x]])
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name= result[x])
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = symbol[x])
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = symbols[x])
}
print(symbols[1])
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = symbols[x])
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = symbols[[x]])
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = symbols[x])
}
print(symbols[2])
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
print(x)
}
for (x in symbols) {
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
for (x in symbols) {
plot(result[[x]], main = "Visualizations", name = x)
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
for (x in symbols) {
plot(result[[x]], main = "Visualizations", name = x)
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
for (x in symbols) {
plot(result[[x]], main = "Visualizations", name = x)
#candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
for (x in symbols) {
plot(result[[x]], main = "Visualizations", name = x)
#candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
for (x in symbols) {
plot(result$SNDL, main = "Visualizations")
candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
shiny::runApp()
runApp()
library(shinybusy)
source("scripts/analysis.R")
runApp()
runApp()
runApp()
runApp()
for (x in symbols) {
candle <- candleChart(result[[x]], up.col="darkgreen",dn.col="red",theme = "white", name = x)
}
runApp()
runApp('C:/Users/dhruv/Desktop/ex')
runApp('C:/Users/dhruv/Desktop/ex')
runApp('C:/Users/dhruv/Desktop/ex')
runApp('C:/Users/dhruv/Desktop/ex')
runApp('C:/Users/dhruv/Desktop/ex')
runApp('C:/Users/dhruv/Desktop/ex')
output$plot <- renderPlot({
candleChart(finalInput(), up.col="darkgreen",dn.col="red",theme = "white")
})
page_two <- tabPanel(
shinyUI(fluidPage(
titlePanel("stockVis"),
sidebarLayout(
sidebarPanel(
helpText("Select a stock to examine.
Information will be collected from yahoo finance."),
textInput("symb", "Symbol", "SPY"),
dateRangeInput("dates",
"Date range",
start = "2013-01-01",
end = as.character(Sys.Date())),
actionButton("get", "Get Stock"),
br(),
br(),
checkboxInput("log", "Plot y axis on log scale",
value = FALSE)
),
mainPanel(plotOutput("plot"))
)
))
# Define server
server <- function(input, output) {
output$top_stocks<-renderDataTable({
source("scripts/top_ten.R")
return(top)
})
dataInput <- reactive({
getSymbols(input$symb, src = "yahoo",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
})
finalInput <- reactive({
return(dataInput())
})
output$plot <- renderPlot({
candleChart(finalInput(), up.col="darkgreen",dn.col="red",theme = "white")
})
}
}
finalInput <- reactive({
return(dataInput())
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
