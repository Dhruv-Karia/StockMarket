install.packages("installr")
library(installr)
updateR()
install.packages("tidyverse")
library(tidyverse)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df = do.call(rbind.data.frame, tables)
install.packages(rvest)
install.packages("rvest")
install.packages("rvest")
library(tidyverse)
library(rvest)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df = do.call(rbind.data.frame, tables)
View(content)
View(df)
setwd("C:/Users/justi/OneDrive/Desktop/UW Freshman 2020 - 2021/Hacklytics/StockMarket")
library(plotly)
library(ggplot2)
View(df)
scatter <- ggplot(df, aes("3 Month Performance", "Rating", color = Score)) +
geom_point(aes(size = rank)) +
scale_x_log10()
View(scatter)
View(scatter)
View(scatter)
p <- ggplot(df, aes("3 Month Performance", "Rating", color = Score)) +
geom_point(aes(size = rank)) +
scale_x_log10()
scatter <- ggplotly(p)
scatter
p <- ggplot(df, aes(Score, Rating, color = Score)) +
geom_point(aes(size = rank)) +
scale_x_log10()
scatter <- ggplotly(p)
scatter
p <- ggplot(df, aes(Score, Rating)) +
geom_point(aes(frame = rank))
scatter <- ggplotly(p)
scatter
p <- ggplot(df, aes(Score, Rating)) +
geom_point(aes(frame = rank))
scatter <- ggplotly(p)
scatter
p
shiny::runApp()
runApp()
View(df)
library(tidyverse)
library(rvest)
library(BatchGetSymbols)
library(plotly)
library(ggplot2)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
p <- ggplot(df, aes(Score, Rating)) +
geom_point(aes(frame = ))
scatter <- ggplotly(p)
View(df)
View(df)
View(df)
View(df)
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
View(df)
View(df)
content <- read_html("http://web.archive.org/web/20201218062519/http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
content <- read_html("http://web.archive.org/web/20210131152856/http://gambiste.com/index.php/gambiste-daily-stock-rating/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
library(tidyverse)
library(rvest)
library(BatchGetSymbols)
library(plotly)
library(ggplot2)
content <- read_html("http://web.archive.org/web/20210131152856/http://gambiste.com/index.php/gambiste-daily-stock-rating/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
View(content)
View(tables)
View(tables)
View(content)
runApp()
View(tables)
runApp()
# source("analysis.R")
home_page <- tabPanel(
sidebarLayout(
"Top Recent Stock Prices",
sidebarPanel(
sliderInput(
inputId = "Week",
label = "Week Slider",
min = 0,
max = 52,
value = 52
)
),
mainPanel(
"title"
# plotOutput(outputId = "")
)
)
)
runApp()
runApp()
runApp()
runApp()
source("analysis.R")
home_page <- tabPanel(
sidebarLayout(
#   "Top Recent Stock Prices",
sidebarPanel(
),
mainPanel(
#     "title"
#    # plotOutput(outputId = "")
)
)
)
page_two <- tabPanel(
"Mission Statement",
sidebarLayout(
sidebarPanel(
"[Where we're from / who we are]"
),
mainPanel(
"[Why we're doing this]"
)
)
)
ui <- fluidPage(
navbarPage(
home_page,
page_two
)
)
runApp()
runApp()
install.packages(shinybusy)
install.packages("shinybusy")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ui <- fluidPage(
navbarPage(
"Stocklytics",
home_page,
page_two
)
)
runApp()
install.packages("quantmod")
runApp()
runApp()
View(df)
View(df)
content <- read_html("http://gambiste.com/")
tables <- content %>% html_table(fill = TRUE)
df <- do.call(rbind.data.frame, tables)
View(df)
p <- ggplot(df, aes(x = 3 months perf, y = rating, z = score)) %>%
geom_point()
View(df)
library(tidyverse)
p <- ggplot(df, aes(x = 3 months perf, y = rating, z = score)) +
geom_point()
View(df)
p <- ggplot(df, aes(x = `3 Months perf`, y = rating, z = score)) +
geom_point()
View(p)
p <- ggplot(df, aes(x = `3 Months perf`, y = rating)) +
geom_point()
View(p)
p <- ggplot(df, aes(x = `3 Months perf`, y = rating, z = score)) +
geom_point()
View(p)
runApp()
runApp()
server <- function(input, output) {
output$plot <- renderPlotly({
p
})
}
runApp()
View(p)
View(plot)
View(p)
runApp()
View(df)
runApp()
